/*
 * FastSpring API
 * The FastSpring API and its supported requests, data, endpoints, and rate limits.  The FastSpring API is a backend service you can use to communicate with your FastSpring Store programmatically. It requires basic understanding of HTTP communication methods. The primary API communication methods include: - **GET** - request data from your store - **POST** - send data to your store, such as creating a new product record - **DELETE** - remove data from your store  The structure of the JSON data sent and received using the API is very similar to Webhooks. However, using the FastSpring API, you initiate all communication with your FastSpring Store.  If you prefer a client-side method of communicating with your FastSpring Store and generating dynamic webpage content, check out the [Store Builder Library](https://fastspring.com/docs/get-started-with-store-builder-library/).  ## Access the API  #### API Credentials and Authentication  FastSpring API credentials consist of a single username and password for your entire Store. The username and password are used for [Basic Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) when making requests to the API.  #### Obtain Your API Credentials  1. Log on to the FastSpring App and navigate to [Integrations](https://fastspring.com/docs/integrations) > **API Credentials**. Initially, the only option on this page is the **Create** command.  2. Click **Create** to generate your API **Username** and **Password**. The page automatically refreshes, and then your credentials are displayed.  3. Make a note of the credentials and store them securely.  The API credentials allow complete access and control over your FastSpring Store. You will not be able to view the password in the FastSpring App after this session. If you forget your API credentials, you can reset them, however any of your stored procedures that rely on API access must be updated immediately with the new credentials. Otherwise, the API requests will fail.  ## API Requests  **Make all requests to https://api.fastspring.com**  When you make your requests, consider the following: - Ensure that the HTTP methods for all calls use uppercase letters (“GET,” “POST,” “DELETE”) Lowercase letters may result in a 404 error response. - FastSpring requires TLS 1.2 (or later) encryption for all calls to the FastSpring API.  - The API requires a **User-Agent** header in all requests. If your request does not include it, you may receive an 401 error message when attempting to make API requests. - The API uses basic authentication and does not support URL-encoded authentication. Use **Base64** to encode your username and password in the header. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ItemRenewalResponse;
import com.konfigthis.client.model.ItemTaxResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ItemResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ItemResponse {
  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private String product;

  public static final String SERIALIZED_NAME_CUSTOM_PRICE = "customPrice";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PRICE)
  private Boolean customPrice;

  public static final String SERIALIZED_NAME_DISPLAY = "display";
  @SerializedName(SERIALIZED_NAME_DISPLAY)
  private String display;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_INTERVAL_COUNT = "intervalCount";
  @SerializedName(SERIALIZED_NAME_INTERVAL_COUNT)
  private String intervalCount;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  private String period;

  public static final String SERIALIZED_NAME_PERIOD_DAYS = "periodDays";
  @SerializedName(SERIALIZED_NAME_PERIOD_DAYS)
  private String periodDays;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_RENEW_INTO_PRODUCTS = "renewIntoProducts";
  @SerializedName(SERIALIZED_NAME_RENEW_INTO_PRODUCTS)
  private Set<ItemRenewalResponse> renewIntoProducts = null;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<ItemTaxResponse> taxes = null;

  public static final String SERIALIZED_NAME_TRIAL_DAYS = "trialDays";
  @SerializedName(SERIALIZED_NAME_TRIAL_DAYS)
  private Integer trialDays;

  public static final String SERIALIZED_NAME_SUBSCRIPTION = "subscription";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION)
  private Boolean subscription;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_UNIT_COUPON_DISCOUNT = "unitCouponDiscount";
  @SerializedName(SERIALIZED_NAME_UNIT_COUPON_DISCOUNT)
  private Double unitCouponDiscount;

  public static final String SERIALIZED_NAME_UNIT_COUPON_DISCOUNT_DISPLAY = "unitCouponDiscountDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_COUPON_DISCOUNT_DISPLAY)
  private String unitCouponDiscountDisplay;

  public static final String SERIALIZED_NAME_UNIT_COUPON_DISCOUNT_IN_PAYOUT_CURRENCY = "unitCouponDiscountInPayoutCurrency";
  @SerializedName(SERIALIZED_NAME_UNIT_COUPON_DISCOUNT_IN_PAYOUT_CURRENCY)
  private Double unitCouponDiscountInPayoutCurrency;

  public static final String SERIALIZED_NAME_UNIT_COUPON_DISCOUNT_IN_PAYOUT_CURRENCY_DISPLAY = "unitCouponDiscountInPayoutCurrencyDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_COUPON_DISCOUNT_IN_PAYOUT_CURRENCY_DISPLAY)
  private String unitCouponDiscountInPayoutCurrencyDisplay;

  public static final String SERIALIZED_NAME_UNIT_DISCOUNT = "unitDiscount";
  @SerializedName(SERIALIZED_NAME_UNIT_DISCOUNT)
  private Double unitDiscount;

  public static final String SERIALIZED_NAME_UNIT_DISCOUNT_DISPLAY = "unitDiscountDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_DISCOUNT_DISPLAY)
  private String unitDiscountDisplay;

  public static final String SERIALIZED_NAME_UNIT_DISCOUNT_IN_PAYOUT_CURRENCY = "unitDiscountInPayoutCurrency";
  @SerializedName(SERIALIZED_NAME_UNIT_DISCOUNT_IN_PAYOUT_CURRENCY)
  private Double unitDiscountInPayoutCurrency;

  public static final String SERIALIZED_NAME_UNIT_DISCOUNT_IN_PAYOUT_CURRENCY_DISPLAY = "unitDiscountInPayoutCurrencyDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_DISCOUNT_IN_PAYOUT_CURRENCY_DISPLAY)
  private String unitDiscountInPayoutCurrencyDisplay;

  public static final String SERIALIZED_NAME_UNIT_LIST_PRICE = "unitListPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_LIST_PRICE)
  private Double unitListPrice;

  public static final String SERIALIZED_NAME_UNIT_LIST_PRICE_DISPLAY = "unitListPriceDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_LIST_PRICE_DISPLAY)
  private String unitListPriceDisplay;

  public static final String SERIALIZED_NAME_UNIT_LIST_PRICE_IN_PAYOUT_CURRENCY = "unitListPriceInPayoutCurrency";
  @SerializedName(SERIALIZED_NAME_UNIT_LIST_PRICE_IN_PAYOUT_CURRENCY)
  private Double unitListPriceInPayoutCurrency;

  public static final String SERIALIZED_NAME_UNIT_LIST_PRICE_IN_PAYOUT_CURRENCY_DISPLAY = "unitListPriceInPayoutCurrencyDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_LIST_PRICE_IN_PAYOUT_CURRENCY_DISPLAY)
  private String unitListPriceInPayoutCurrencyDisplay;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private Double unitPrice;

  public static final String SERIALIZED_NAME_UNIT_PRICE_DISPLAY = "unitPriceDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE_DISPLAY)
  private String unitPriceDisplay;

  public static final String SERIALIZED_NAME_UNIT_PRICE_IN_PAYOUT_CURRENCY = "unitPriceInPayoutCurrency";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE_IN_PAYOUT_CURRENCY)
  private Double unitPriceInPayoutCurrency;

  public static final String SERIALIZED_NAME_UNIT_PRICE_IN_PAYOUT_CURRENCY_DISPLAY = "unitPriceInPayoutCurrencyDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE_IN_PAYOUT_CURRENCY_DISPLAY)
  private String unitPriceInPayoutCurrencyDisplay;

  public static final String SERIALIZED_NAME_UNIT_PRICE_WITHOUT_TAX = "unitPriceWithoutTax";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE_WITHOUT_TAX)
  private Double unitPriceWithoutTax;

  public static final String SERIALIZED_NAME_UNIT_PRICE_WITHOUT_TAX_DISPLAY = "unitPriceWithoutTaxDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE_WITHOUT_TAX_DISPLAY)
  private String unitPriceWithoutTaxDisplay;

  public static final String SERIALIZED_NAME_UNIT_LIST_PRICE_WITHOUT_TAX = "unitListPriceWithoutTax";
  @SerializedName(SERIALIZED_NAME_UNIT_LIST_PRICE_WITHOUT_TAX)
  private Double unitListPriceWithoutTax;

  public static final String SERIALIZED_NAME_UNIT_LIST_PRICE_WITHOUT_TAX_DISPLAY = "unitListPriceWithoutTaxDisplay";
  @SerializedName(SERIALIZED_NAME_UNIT_LIST_PRICE_WITHOUT_TAX_DISPLAY)
  private String unitListPriceWithoutTaxDisplay;

  public ItemResponse() {
  }

  public ItemResponse product(String product) {
    
    
    
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProduct() {
    return product;
  }


  public void setProduct(String product) {
    
    
    
    this.product = product;
  }


  public ItemResponse customPrice(Boolean customPrice) {
    
    
    
    
    this.customPrice = customPrice;
    return this;
  }

   /**
   * Get customPrice
   * @return customPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCustomPrice() {
    return customPrice;
  }


  public void setCustomPrice(Boolean customPrice) {
    
    
    
    this.customPrice = customPrice;
  }


  public ItemResponse display(String display) {
    
    
    
    
    this.display = display;
    return this;
  }

   /**
   * Get display
   * @return display
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Book The Ring", value = "")

  public String getDisplay() {
    return display;
  }


  public void setDisplay(String display) {
    
    
    
    this.display = display;
  }


  public ItemResponse image(String image) {
    
    
    
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "icon.png", value = "")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    
    
    
    this.image = image;
  }


  public ItemResponse intervalCount(String intervalCount) {
    
    
    
    
    this.intervalCount = intervalCount;
    return this;
  }

   /**
   * Get intervalCount
   * @return intervalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "")

  public String getIntervalCount() {
    return intervalCount;
  }


  public void setIntervalCount(String intervalCount) {
    
    
    
    this.intervalCount = intervalCount;
  }


  public ItemResponse period(String period) {
    
    
    
    
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Monthly", value = "")

  public String getPeriod() {
    return period;
  }


  public void setPeriod(String period) {
    
    
    
    this.period = period;
  }


  public ItemResponse periodDays(String periodDays) {
    
    
    
    
    this.periodDays = periodDays;
    return this;
  }

   /**
   * Get periodDays
   * @return periodDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "")

  public String getPeriodDays() {
    return periodDays;
  }


  public void setPeriodDays(String periodDays) {
    
    
    
    this.periodDays = periodDays;
  }


  public ItemResponse quantity(Integer quantity) {
    
    
    
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    
    
    
    this.quantity = quantity;
  }


  public ItemResponse renewIntoProducts(Set<ItemRenewalResponse> renewIntoProducts) {
    
    
    
    
    this.renewIntoProducts = renewIntoProducts;
    return this;
  }

  public ItemResponse addRenewIntoProductsItem(ItemRenewalResponse renewIntoProductsItem) {
    if (this.renewIntoProducts == null) {
      this.renewIntoProducts = new LinkedHashSet<>();
    }
    this.renewIntoProducts.add(renewIntoProductsItem);
    return this;
  }

   /**
   * Get renewIntoProducts
   * @return renewIntoProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Set<ItemRenewalResponse> getRenewIntoProducts() {
    return renewIntoProducts;
  }


  public void setRenewIntoProducts(Set<ItemRenewalResponse> renewIntoProducts) {
    
    
    
    this.renewIntoProducts = renewIntoProducts;
  }


  public ItemResponse taxes(List<ItemTaxResponse> taxes) {
    
    
    
    
    this.taxes = taxes;
    return this;
  }

  public ItemResponse addTaxesItem(ItemTaxResponse taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ItemTaxResponse> getTaxes() {
    return taxes;
  }


  public void setTaxes(List<ItemTaxResponse> taxes) {
    
    
    
    this.taxes = taxes;
  }


  public ItemResponse trialDays(Integer trialDays) {
    
    
    
    
    this.trialDays = trialDays;
    return this;
  }

   /**
   * Get trialDays
   * @return trialDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30", value = "")

  public Integer getTrialDays() {
    return trialDays;
  }


  public void setTrialDays(Integer trialDays) {
    
    
    
    this.trialDays = trialDays;
  }


  public ItemResponse subscription(Boolean subscription) {
    
    
    
    
    this.subscription = subscription;
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSubscription() {
    return subscription;
  }


  public void setSubscription(Boolean subscription) {
    
    
    
    this.subscription = subscription;
  }


  public ItemResponse type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public ItemResponse unitCouponDiscount(Double unitCouponDiscount) {
    
    
    
    
    this.unitCouponDiscount = unitCouponDiscount;
    return this;
  }

  public ItemResponse unitCouponDiscount(Integer unitCouponDiscount) {
    
    
    
    
    this.unitCouponDiscount = unitCouponDiscount.doubleValue();
    return this;
  }

   /**
   * Get unitCouponDiscount
   * @return unitCouponDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitCouponDiscount() {
    return unitCouponDiscount;
  }


  public void setUnitCouponDiscount(Double unitCouponDiscount) {
    
    
    
    this.unitCouponDiscount = unitCouponDiscount;
  }


  public ItemResponse unitCouponDiscountDisplay(String unitCouponDiscountDisplay) {
    
    
    
    
    this.unitCouponDiscountDisplay = unitCouponDiscountDisplay;
    return this;
  }

   /**
   * Get unitCouponDiscountDisplay
   * @return unitCouponDiscountDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitCouponDiscountDisplay() {
    return unitCouponDiscountDisplay;
  }


  public void setUnitCouponDiscountDisplay(String unitCouponDiscountDisplay) {
    
    
    
    this.unitCouponDiscountDisplay = unitCouponDiscountDisplay;
  }


  public ItemResponse unitCouponDiscountInPayoutCurrency(Double unitCouponDiscountInPayoutCurrency) {
    
    
    
    
    this.unitCouponDiscountInPayoutCurrency = unitCouponDiscountInPayoutCurrency;
    return this;
  }

  public ItemResponse unitCouponDiscountInPayoutCurrency(Integer unitCouponDiscountInPayoutCurrency) {
    
    
    
    
    this.unitCouponDiscountInPayoutCurrency = unitCouponDiscountInPayoutCurrency.doubleValue();
    return this;
  }

   /**
   * Get unitCouponDiscountInPayoutCurrency
   * @return unitCouponDiscountInPayoutCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitCouponDiscountInPayoutCurrency() {
    return unitCouponDiscountInPayoutCurrency;
  }


  public void setUnitCouponDiscountInPayoutCurrency(Double unitCouponDiscountInPayoutCurrency) {
    
    
    
    this.unitCouponDiscountInPayoutCurrency = unitCouponDiscountInPayoutCurrency;
  }


  public ItemResponse unitCouponDiscountInPayoutCurrencyDisplay(String unitCouponDiscountInPayoutCurrencyDisplay) {
    
    
    
    
    this.unitCouponDiscountInPayoutCurrencyDisplay = unitCouponDiscountInPayoutCurrencyDisplay;
    return this;
  }

   /**
   * Get unitCouponDiscountInPayoutCurrencyDisplay
   * @return unitCouponDiscountInPayoutCurrencyDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitCouponDiscountInPayoutCurrencyDisplay() {
    return unitCouponDiscountInPayoutCurrencyDisplay;
  }


  public void setUnitCouponDiscountInPayoutCurrencyDisplay(String unitCouponDiscountInPayoutCurrencyDisplay) {
    
    
    
    this.unitCouponDiscountInPayoutCurrencyDisplay = unitCouponDiscountInPayoutCurrencyDisplay;
  }


  public ItemResponse unitDiscount(Double unitDiscount) {
    
    
    
    
    this.unitDiscount = unitDiscount;
    return this;
  }

  public ItemResponse unitDiscount(Integer unitDiscount) {
    
    
    
    
    this.unitDiscount = unitDiscount.doubleValue();
    return this;
  }

   /**
   * Get unitDiscount
   * @return unitDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitDiscount() {
    return unitDiscount;
  }


  public void setUnitDiscount(Double unitDiscount) {
    
    
    
    this.unitDiscount = unitDiscount;
  }


  public ItemResponse unitDiscountDisplay(String unitDiscountDisplay) {
    
    
    
    
    this.unitDiscountDisplay = unitDiscountDisplay;
    return this;
  }

   /**
   * Get unitDiscountDisplay
   * @return unitDiscountDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitDiscountDisplay() {
    return unitDiscountDisplay;
  }


  public void setUnitDiscountDisplay(String unitDiscountDisplay) {
    
    
    
    this.unitDiscountDisplay = unitDiscountDisplay;
  }


  public ItemResponse unitDiscountInPayoutCurrency(Double unitDiscountInPayoutCurrency) {
    
    
    
    
    this.unitDiscountInPayoutCurrency = unitDiscountInPayoutCurrency;
    return this;
  }

  public ItemResponse unitDiscountInPayoutCurrency(Integer unitDiscountInPayoutCurrency) {
    
    
    
    
    this.unitDiscountInPayoutCurrency = unitDiscountInPayoutCurrency.doubleValue();
    return this;
  }

   /**
   * Get unitDiscountInPayoutCurrency
   * @return unitDiscountInPayoutCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitDiscountInPayoutCurrency() {
    return unitDiscountInPayoutCurrency;
  }


  public void setUnitDiscountInPayoutCurrency(Double unitDiscountInPayoutCurrency) {
    
    
    
    this.unitDiscountInPayoutCurrency = unitDiscountInPayoutCurrency;
  }


  public ItemResponse unitDiscountInPayoutCurrencyDisplay(String unitDiscountInPayoutCurrencyDisplay) {
    
    
    
    
    this.unitDiscountInPayoutCurrencyDisplay = unitDiscountInPayoutCurrencyDisplay;
    return this;
  }

   /**
   * Get unitDiscountInPayoutCurrencyDisplay
   * @return unitDiscountInPayoutCurrencyDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitDiscountInPayoutCurrencyDisplay() {
    return unitDiscountInPayoutCurrencyDisplay;
  }


  public void setUnitDiscountInPayoutCurrencyDisplay(String unitDiscountInPayoutCurrencyDisplay) {
    
    
    
    this.unitDiscountInPayoutCurrencyDisplay = unitDiscountInPayoutCurrencyDisplay;
  }


  public ItemResponse unitListPrice(Double unitListPrice) {
    
    
    
    
    this.unitListPrice = unitListPrice;
    return this;
  }

  public ItemResponse unitListPrice(Integer unitListPrice) {
    
    
    
    
    this.unitListPrice = unitListPrice.doubleValue();
    return this;
  }

   /**
   * Get unitListPrice
   * @return unitListPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitListPrice() {
    return unitListPrice;
  }


  public void setUnitListPrice(Double unitListPrice) {
    
    
    
    this.unitListPrice = unitListPrice;
  }


  public ItemResponse unitListPriceDisplay(String unitListPriceDisplay) {
    
    
    
    
    this.unitListPriceDisplay = unitListPriceDisplay;
    return this;
  }

   /**
   * Get unitListPriceDisplay
   * @return unitListPriceDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitListPriceDisplay() {
    return unitListPriceDisplay;
  }


  public void setUnitListPriceDisplay(String unitListPriceDisplay) {
    
    
    
    this.unitListPriceDisplay = unitListPriceDisplay;
  }


  public ItemResponse unitListPriceInPayoutCurrency(Double unitListPriceInPayoutCurrency) {
    
    
    
    
    this.unitListPriceInPayoutCurrency = unitListPriceInPayoutCurrency;
    return this;
  }

  public ItemResponse unitListPriceInPayoutCurrency(Integer unitListPriceInPayoutCurrency) {
    
    
    
    
    this.unitListPriceInPayoutCurrency = unitListPriceInPayoutCurrency.doubleValue();
    return this;
  }

   /**
   * Get unitListPriceInPayoutCurrency
   * @return unitListPriceInPayoutCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitListPriceInPayoutCurrency() {
    return unitListPriceInPayoutCurrency;
  }


  public void setUnitListPriceInPayoutCurrency(Double unitListPriceInPayoutCurrency) {
    
    
    
    this.unitListPriceInPayoutCurrency = unitListPriceInPayoutCurrency;
  }


  public ItemResponse unitListPriceInPayoutCurrencyDisplay(String unitListPriceInPayoutCurrencyDisplay) {
    
    
    
    
    this.unitListPriceInPayoutCurrencyDisplay = unitListPriceInPayoutCurrencyDisplay;
    return this;
  }

   /**
   * Get unitListPriceInPayoutCurrencyDisplay
   * @return unitListPriceInPayoutCurrencyDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitListPriceInPayoutCurrencyDisplay() {
    return unitListPriceInPayoutCurrencyDisplay;
  }


  public void setUnitListPriceInPayoutCurrencyDisplay(String unitListPriceInPayoutCurrencyDisplay) {
    
    
    
    this.unitListPriceInPayoutCurrencyDisplay = unitListPriceInPayoutCurrencyDisplay;
  }


  public ItemResponse unitPrice(Double unitPrice) {
    
    
    
    
    this.unitPrice = unitPrice;
    return this;
  }

  public ItemResponse unitPrice(Integer unitPrice) {
    
    
    
    
    this.unitPrice = unitPrice.doubleValue();
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitPrice() {
    return unitPrice;
  }


  public void setUnitPrice(Double unitPrice) {
    
    
    
    this.unitPrice = unitPrice;
  }


  public ItemResponse unitPriceDisplay(String unitPriceDisplay) {
    
    
    
    
    this.unitPriceDisplay = unitPriceDisplay;
    return this;
  }

   /**
   * Get unitPriceDisplay
   * @return unitPriceDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitPriceDisplay() {
    return unitPriceDisplay;
  }


  public void setUnitPriceDisplay(String unitPriceDisplay) {
    
    
    
    this.unitPriceDisplay = unitPriceDisplay;
  }


  public ItemResponse unitPriceInPayoutCurrency(Double unitPriceInPayoutCurrency) {
    
    
    
    
    this.unitPriceInPayoutCurrency = unitPriceInPayoutCurrency;
    return this;
  }

  public ItemResponse unitPriceInPayoutCurrency(Integer unitPriceInPayoutCurrency) {
    
    
    
    
    this.unitPriceInPayoutCurrency = unitPriceInPayoutCurrency.doubleValue();
    return this;
  }

   /**
   * Get unitPriceInPayoutCurrency
   * @return unitPriceInPayoutCurrency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitPriceInPayoutCurrency() {
    return unitPriceInPayoutCurrency;
  }


  public void setUnitPriceInPayoutCurrency(Double unitPriceInPayoutCurrency) {
    
    
    
    this.unitPriceInPayoutCurrency = unitPriceInPayoutCurrency;
  }


  public ItemResponse unitPriceInPayoutCurrencyDisplay(String unitPriceInPayoutCurrencyDisplay) {
    
    
    
    
    this.unitPriceInPayoutCurrencyDisplay = unitPriceInPayoutCurrencyDisplay;
    return this;
  }

   /**
   * Get unitPriceInPayoutCurrencyDisplay
   * @return unitPriceInPayoutCurrencyDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitPriceInPayoutCurrencyDisplay() {
    return unitPriceInPayoutCurrencyDisplay;
  }


  public void setUnitPriceInPayoutCurrencyDisplay(String unitPriceInPayoutCurrencyDisplay) {
    
    
    
    this.unitPriceInPayoutCurrencyDisplay = unitPriceInPayoutCurrencyDisplay;
  }


  public ItemResponse unitPriceWithoutTax(Double unitPriceWithoutTax) {
    
    
    
    
    this.unitPriceWithoutTax = unitPriceWithoutTax;
    return this;
  }

  public ItemResponse unitPriceWithoutTax(Integer unitPriceWithoutTax) {
    
    
    
    
    this.unitPriceWithoutTax = unitPriceWithoutTax.doubleValue();
    return this;
  }

   /**
   * Get unitPriceWithoutTax
   * @return unitPriceWithoutTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitPriceWithoutTax() {
    return unitPriceWithoutTax;
  }


  public void setUnitPriceWithoutTax(Double unitPriceWithoutTax) {
    
    
    
    this.unitPriceWithoutTax = unitPriceWithoutTax;
  }


  public ItemResponse unitPriceWithoutTaxDisplay(String unitPriceWithoutTaxDisplay) {
    
    
    
    
    this.unitPriceWithoutTaxDisplay = unitPriceWithoutTaxDisplay;
    return this;
  }

   /**
   * Get unitPriceWithoutTaxDisplay
   * @return unitPriceWithoutTaxDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitPriceWithoutTaxDisplay() {
    return unitPriceWithoutTaxDisplay;
  }


  public void setUnitPriceWithoutTaxDisplay(String unitPriceWithoutTaxDisplay) {
    
    
    
    this.unitPriceWithoutTaxDisplay = unitPriceWithoutTaxDisplay;
  }


  public ItemResponse unitListPriceWithoutTax(Double unitListPriceWithoutTax) {
    
    
    
    
    this.unitListPriceWithoutTax = unitListPriceWithoutTax;
    return this;
  }

  public ItemResponse unitListPriceWithoutTax(Integer unitListPriceWithoutTax) {
    
    
    
    
    this.unitListPriceWithoutTax = unitListPriceWithoutTax.doubleValue();
    return this;
  }

   /**
   * Get unitListPriceWithoutTax
   * @return unitListPriceWithoutTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitListPriceWithoutTax() {
    return unitListPriceWithoutTax;
  }


  public void setUnitListPriceWithoutTax(Double unitListPriceWithoutTax) {
    
    
    
    this.unitListPriceWithoutTax = unitListPriceWithoutTax;
  }


  public ItemResponse unitListPriceWithoutTaxDisplay(String unitListPriceWithoutTaxDisplay) {
    
    
    
    
    this.unitListPriceWithoutTaxDisplay = unitListPriceWithoutTaxDisplay;
    return this;
  }

   /**
   * Get unitListPriceWithoutTaxDisplay
   * @return unitListPriceWithoutTaxDisplay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnitListPriceWithoutTaxDisplay() {
    return unitListPriceWithoutTaxDisplay;
  }


  public void setUnitListPriceWithoutTaxDisplay(String unitListPriceWithoutTaxDisplay) {
    
    
    
    this.unitListPriceWithoutTaxDisplay = unitListPriceWithoutTaxDisplay;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ItemResponse instance itself
   */
  public ItemResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemResponse itemResponse = (ItemResponse) o;
    return Objects.equals(this.product, itemResponse.product) &&
        Objects.equals(this.customPrice, itemResponse.customPrice) &&
        Objects.equals(this.display, itemResponse.display) &&
        Objects.equals(this.image, itemResponse.image) &&
        Objects.equals(this.intervalCount, itemResponse.intervalCount) &&
        Objects.equals(this.period, itemResponse.period) &&
        Objects.equals(this.periodDays, itemResponse.periodDays) &&
        Objects.equals(this.quantity, itemResponse.quantity) &&
        Objects.equals(this.renewIntoProducts, itemResponse.renewIntoProducts) &&
        Objects.equals(this.taxes, itemResponse.taxes) &&
        Objects.equals(this.trialDays, itemResponse.trialDays) &&
        Objects.equals(this.subscription, itemResponse.subscription) &&
        Objects.equals(this.type, itemResponse.type) &&
        Objects.equals(this.unitCouponDiscount, itemResponse.unitCouponDiscount) &&
        Objects.equals(this.unitCouponDiscountDisplay, itemResponse.unitCouponDiscountDisplay) &&
        Objects.equals(this.unitCouponDiscountInPayoutCurrency, itemResponse.unitCouponDiscountInPayoutCurrency) &&
        Objects.equals(this.unitCouponDiscountInPayoutCurrencyDisplay, itemResponse.unitCouponDiscountInPayoutCurrencyDisplay) &&
        Objects.equals(this.unitDiscount, itemResponse.unitDiscount) &&
        Objects.equals(this.unitDiscountDisplay, itemResponse.unitDiscountDisplay) &&
        Objects.equals(this.unitDiscountInPayoutCurrency, itemResponse.unitDiscountInPayoutCurrency) &&
        Objects.equals(this.unitDiscountInPayoutCurrencyDisplay, itemResponse.unitDiscountInPayoutCurrencyDisplay) &&
        Objects.equals(this.unitListPrice, itemResponse.unitListPrice) &&
        Objects.equals(this.unitListPriceDisplay, itemResponse.unitListPriceDisplay) &&
        Objects.equals(this.unitListPriceInPayoutCurrency, itemResponse.unitListPriceInPayoutCurrency) &&
        Objects.equals(this.unitListPriceInPayoutCurrencyDisplay, itemResponse.unitListPriceInPayoutCurrencyDisplay) &&
        Objects.equals(this.unitPrice, itemResponse.unitPrice) &&
        Objects.equals(this.unitPriceDisplay, itemResponse.unitPriceDisplay) &&
        Objects.equals(this.unitPriceInPayoutCurrency, itemResponse.unitPriceInPayoutCurrency) &&
        Objects.equals(this.unitPriceInPayoutCurrencyDisplay, itemResponse.unitPriceInPayoutCurrencyDisplay) &&
        Objects.equals(this.unitPriceWithoutTax, itemResponse.unitPriceWithoutTax) &&
        Objects.equals(this.unitPriceWithoutTaxDisplay, itemResponse.unitPriceWithoutTaxDisplay) &&
        Objects.equals(this.unitListPriceWithoutTax, itemResponse.unitListPriceWithoutTax) &&
        Objects.equals(this.unitListPriceWithoutTaxDisplay, itemResponse.unitListPriceWithoutTaxDisplay)&&
        Objects.equals(this.additionalProperties, itemResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(product, customPrice, display, image, intervalCount, period, periodDays, quantity, renewIntoProducts, taxes, trialDays, subscription, type, unitCouponDiscount, unitCouponDiscountDisplay, unitCouponDiscountInPayoutCurrency, unitCouponDiscountInPayoutCurrencyDisplay, unitDiscount, unitDiscountDisplay, unitDiscountInPayoutCurrency, unitDiscountInPayoutCurrencyDisplay, unitListPrice, unitListPriceDisplay, unitListPriceInPayoutCurrency, unitListPriceInPayoutCurrencyDisplay, unitPrice, unitPriceDisplay, unitPriceInPayoutCurrency, unitPriceInPayoutCurrencyDisplay, unitPriceWithoutTax, unitPriceWithoutTaxDisplay, unitListPriceWithoutTax, unitListPriceWithoutTaxDisplay, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemResponse {\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    customPrice: ").append(toIndentedString(customPrice)).append("\n");
    sb.append("    display: ").append(toIndentedString(display)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    intervalCount: ").append(toIndentedString(intervalCount)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    periodDays: ").append(toIndentedString(periodDays)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    renewIntoProducts: ").append(toIndentedString(renewIntoProducts)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    trialDays: ").append(toIndentedString(trialDays)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unitCouponDiscount: ").append(toIndentedString(unitCouponDiscount)).append("\n");
    sb.append("    unitCouponDiscountDisplay: ").append(toIndentedString(unitCouponDiscountDisplay)).append("\n");
    sb.append("    unitCouponDiscountInPayoutCurrency: ").append(toIndentedString(unitCouponDiscountInPayoutCurrency)).append("\n");
    sb.append("    unitCouponDiscountInPayoutCurrencyDisplay: ").append(toIndentedString(unitCouponDiscountInPayoutCurrencyDisplay)).append("\n");
    sb.append("    unitDiscount: ").append(toIndentedString(unitDiscount)).append("\n");
    sb.append("    unitDiscountDisplay: ").append(toIndentedString(unitDiscountDisplay)).append("\n");
    sb.append("    unitDiscountInPayoutCurrency: ").append(toIndentedString(unitDiscountInPayoutCurrency)).append("\n");
    sb.append("    unitDiscountInPayoutCurrencyDisplay: ").append(toIndentedString(unitDiscountInPayoutCurrencyDisplay)).append("\n");
    sb.append("    unitListPrice: ").append(toIndentedString(unitListPrice)).append("\n");
    sb.append("    unitListPriceDisplay: ").append(toIndentedString(unitListPriceDisplay)).append("\n");
    sb.append("    unitListPriceInPayoutCurrency: ").append(toIndentedString(unitListPriceInPayoutCurrency)).append("\n");
    sb.append("    unitListPriceInPayoutCurrencyDisplay: ").append(toIndentedString(unitListPriceInPayoutCurrencyDisplay)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    unitPriceDisplay: ").append(toIndentedString(unitPriceDisplay)).append("\n");
    sb.append("    unitPriceInPayoutCurrency: ").append(toIndentedString(unitPriceInPayoutCurrency)).append("\n");
    sb.append("    unitPriceInPayoutCurrencyDisplay: ").append(toIndentedString(unitPriceInPayoutCurrencyDisplay)).append("\n");
    sb.append("    unitPriceWithoutTax: ").append(toIndentedString(unitPriceWithoutTax)).append("\n");
    sb.append("    unitPriceWithoutTaxDisplay: ").append(toIndentedString(unitPriceWithoutTaxDisplay)).append("\n");
    sb.append("    unitListPriceWithoutTax: ").append(toIndentedString(unitListPriceWithoutTax)).append("\n");
    sb.append("    unitListPriceWithoutTaxDisplay: ").append(toIndentedString(unitListPriceWithoutTaxDisplay)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("product");
    openapiFields.add("customPrice");
    openapiFields.add("display");
    openapiFields.add("image");
    openapiFields.add("intervalCount");
    openapiFields.add("period");
    openapiFields.add("periodDays");
    openapiFields.add("quantity");
    openapiFields.add("renewIntoProducts");
    openapiFields.add("taxes");
    openapiFields.add("trialDays");
    openapiFields.add("subscription");
    openapiFields.add("type");
    openapiFields.add("unitCouponDiscount");
    openapiFields.add("unitCouponDiscountDisplay");
    openapiFields.add("unitCouponDiscountInPayoutCurrency");
    openapiFields.add("unitCouponDiscountInPayoutCurrencyDisplay");
    openapiFields.add("unitDiscount");
    openapiFields.add("unitDiscountDisplay");
    openapiFields.add("unitDiscountInPayoutCurrency");
    openapiFields.add("unitDiscountInPayoutCurrencyDisplay");
    openapiFields.add("unitListPrice");
    openapiFields.add("unitListPriceDisplay");
    openapiFields.add("unitListPriceInPayoutCurrency");
    openapiFields.add("unitListPriceInPayoutCurrencyDisplay");
    openapiFields.add("unitPrice");
    openapiFields.add("unitPriceDisplay");
    openapiFields.add("unitPriceInPayoutCurrency");
    openapiFields.add("unitPriceInPayoutCurrencyDisplay");
    openapiFields.add("unitPriceWithoutTax");
    openapiFields.add("unitPriceWithoutTaxDisplay");
    openapiFields.add("unitListPriceWithoutTax");
    openapiFields.add("unitListPriceWithoutTaxDisplay");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ItemResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ItemResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItemResponse is not found in the empty JSON string", ItemResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) && !jsonObj.get("product").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product").toString()));
      }
      if ((jsonObj.get("display") != null && !jsonObj.get("display").isJsonNull()) && !jsonObj.get("display").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display").toString()));
      }
      if ((jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) && !jsonObj.get("image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image").toString()));
      }
      if ((jsonObj.get("intervalCount") != null && !jsonObj.get("intervalCount").isJsonNull()) && !jsonObj.get("intervalCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intervalCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intervalCount").toString()));
      }
      if ((jsonObj.get("period") != null && !jsonObj.get("period").isJsonNull()) && !jsonObj.get("period").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `period` to be a primitive type in the JSON string but got `%s`", jsonObj.get("period").toString()));
      }
      if ((jsonObj.get("periodDays") != null && !jsonObj.get("periodDays").isJsonNull()) && !jsonObj.get("periodDays").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodDays` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodDays").toString()));
      }
      if (jsonObj.get("renewIntoProducts") != null && !jsonObj.get("renewIntoProducts").isJsonNull()) {
        JsonArray jsonArrayrenewIntoProducts = jsonObj.getAsJsonArray("renewIntoProducts");
        if (jsonArrayrenewIntoProducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("renewIntoProducts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `renewIntoProducts` to be an array in the JSON string but got `%s`", jsonObj.get("renewIntoProducts").toString()));
          }

          // validate the optional field `renewIntoProducts` (array)
          for (int i = 0; i < jsonArrayrenewIntoProducts.size(); i++) {
            ItemRenewalResponse.validateJsonObject(jsonArrayrenewIntoProducts.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("taxes") != null && !jsonObj.get("taxes").isJsonNull()) {
        JsonArray jsonArraytaxes = jsonObj.getAsJsonArray("taxes");
        if (jsonArraytaxes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxes` to be an array in the JSON string but got `%s`", jsonObj.get("taxes").toString()));
          }

          // validate the optional field `taxes` (array)
          for (int i = 0; i < jsonArraytaxes.size(); i++) {
            ItemTaxResponse.validateJsonObject(jsonArraytaxes.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      if ((jsonObj.get("unitCouponDiscountDisplay") != null && !jsonObj.get("unitCouponDiscountDisplay").isJsonNull()) && !jsonObj.get("unitCouponDiscountDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitCouponDiscountDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitCouponDiscountDisplay").toString()));
      }
      if ((jsonObj.get("unitCouponDiscountInPayoutCurrencyDisplay") != null && !jsonObj.get("unitCouponDiscountInPayoutCurrencyDisplay").isJsonNull()) && !jsonObj.get("unitCouponDiscountInPayoutCurrencyDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitCouponDiscountInPayoutCurrencyDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitCouponDiscountInPayoutCurrencyDisplay").toString()));
      }
      if ((jsonObj.get("unitDiscountDisplay") != null && !jsonObj.get("unitDiscountDisplay").isJsonNull()) && !jsonObj.get("unitDiscountDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitDiscountDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitDiscountDisplay").toString()));
      }
      if ((jsonObj.get("unitDiscountInPayoutCurrencyDisplay") != null && !jsonObj.get("unitDiscountInPayoutCurrencyDisplay").isJsonNull()) && !jsonObj.get("unitDiscountInPayoutCurrencyDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitDiscountInPayoutCurrencyDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitDiscountInPayoutCurrencyDisplay").toString()));
      }
      if ((jsonObj.get("unitListPriceDisplay") != null && !jsonObj.get("unitListPriceDisplay").isJsonNull()) && !jsonObj.get("unitListPriceDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitListPriceDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitListPriceDisplay").toString()));
      }
      if ((jsonObj.get("unitListPriceInPayoutCurrencyDisplay") != null && !jsonObj.get("unitListPriceInPayoutCurrencyDisplay").isJsonNull()) && !jsonObj.get("unitListPriceInPayoutCurrencyDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitListPriceInPayoutCurrencyDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitListPriceInPayoutCurrencyDisplay").toString()));
      }
      if ((jsonObj.get("unitPriceDisplay") != null && !jsonObj.get("unitPriceDisplay").isJsonNull()) && !jsonObj.get("unitPriceDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitPriceDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitPriceDisplay").toString()));
      }
      if ((jsonObj.get("unitPriceInPayoutCurrencyDisplay") != null && !jsonObj.get("unitPriceInPayoutCurrencyDisplay").isJsonNull()) && !jsonObj.get("unitPriceInPayoutCurrencyDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitPriceInPayoutCurrencyDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitPriceInPayoutCurrencyDisplay").toString()));
      }
      if ((jsonObj.get("unitPriceWithoutTaxDisplay") != null && !jsonObj.get("unitPriceWithoutTaxDisplay").isJsonNull()) && !jsonObj.get("unitPriceWithoutTaxDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitPriceWithoutTaxDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitPriceWithoutTaxDisplay").toString()));
      }
      if ((jsonObj.get("unitListPriceWithoutTaxDisplay") != null && !jsonObj.get("unitListPriceWithoutTaxDisplay").isJsonNull()) && !jsonObj.get("unitListPriceWithoutTaxDisplay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unitListPriceWithoutTaxDisplay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unitListPriceWithoutTaxDisplay").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItemResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItemResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItemResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItemResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ItemResponse>() {
           @Override
           public void write(JsonWriter out, ItemResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ItemResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ItemResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ItemResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ItemResponse
  * @throws IOException if the JSON string is invalid with respect to ItemResponse
  */
  public static ItemResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItemResponse.class);
  }

 /**
  * Convert an instance of ItemResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

